{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction These were created using mkdocs . And created with the intention of making my dev notes easily accessible for \"ME\". Having them hosted on a public server is just a happy co-incidence. Organisation On a high level, each different coding tool has a seperate folder. All folders will have a sub-sections and so on. This is all done for my benefit and understanding and not to make the site easily readable. Free-to-use You are free to use any code snippet from here for your own benefit, without attributing any credit to me. Public Since this is hosted on github pages, this is a public repo. There is no other reason. I was not interested in creating a open source project. I am not inclined to maintain this repo for anyone else's benefit other than mine. So please do not create any issues or request any features.","title":"Introduction"},{"location":"#introduction","text":"These were created using mkdocs . And created with the intention of making my dev notes easily accessible for \"ME\". Having them hosted on a public server is just a happy co-incidence.","title":"Introduction"},{"location":"#organisation","text":"On a high level, each different coding tool has a seperate folder. All folders will have a sub-sections and so on. This is all done for my benefit and understanding and not to make the site easily readable.","title":"Organisation"},{"location":"#free-to-use","text":"You are free to use any code snippet from here for your own benefit, without attributing any credit to me.","title":"Free-to-use"},{"location":"#public","text":"Since this is hosted on github pages, this is a public repo. There is no other reason. I was not interested in creating a open source project. I am not inclined to maintain this repo for anyone else's benefit other than mine. So please do not create any issues or request any features.","title":"Public"},{"location":"Dev%20Notes/","text":"Introduction These are the notes for the documentation site you are viewing. Some commands that will help me maintain this site. Hosting and deploys This site is hosted on github repo To push any new change type in mkdocs gh-deploy I have written a script that will deploy the code automatically with the command deploynotes To preview the changes locally use the command mkdocs serve I have written a script that will run the code locally with the command viewnotes Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Introduction"},{"location":"Dev%20Notes/#introduction","text":"These are the notes for the documentation site you are viewing. Some commands that will help me maintain this site.","title":"Introduction"},{"location":"Dev%20Notes/#hosting-and-deploys","text":"This site is hosted on github repo To push any new change type in mkdocs gh-deploy I have written a script that will deploy the code automatically with the command deploynotes To preview the changes locally use the command mkdocs serve I have written a script that will run the code locally with the command viewnotes","title":"Hosting and deploys"},{"location":"Dev%20Notes/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"Dev%20Notes/Current%20Setup/","text":"Auto-backup on iCloud My files are stored in an iCloud folder as a fail safe. So, even if I forget to push the code to git, I have still a copy on iCloud As you can imagine, losing these notes would be catastrophic Using Obsidian to edit the files Obsidian is my editor of choice. Yes, I could use Sublime too. Which I use for writing code. But since I use obsidian for my daily notes, it is always on. So quickly adding a snippet is not a problem. Plus, the predective/assitive text in sublime, while helpful for writing code, is really irritating for normal writing purposes. Aliases on my ~/.zshrc file Since the files are on iCloud folder, navigating to them via terminal and then pushing them on git is a bit impractical. So I added the following aliases on my ~/.zshrc file Just makes my life easier alias viewnotes=\"cd ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Dev-notes\" alias localnotes=\"cd ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Dev-notes; MkDocs serve\" alias deploynotes=\"cd ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Dev-notes; mkdocs gh-deploy; cd\" Commands to use To open the ~/.zshrc file open -e ~/.zshrc To load/source the ~/.zshrc file source ~/.zshrc","title":"Current Setup"},{"location":"Dev%20Notes/Current%20Setup/#commands-to-use","text":"To open the ~/.zshrc file open -e ~/.zshrc To load/source the ~/.zshrc file source ~/.zshrc","title":"Commands to use"},{"location":"Dev%20Notes/Material%20Theme/","text":"I run the material theme for mkdocs as you can tell by the footer of this page I also have customised this site and will continue to do so, to suit my needs further. My favorite customisation for now, is the placement of the copy snippet button. Small thing, but makes copying code so much easier for me. See the position of the copy button?","title":"Material Theme"},{"location":"Dev%20Notes/Setup%20-%20nvm/","text":"To find all the installed version of node nvm ls To use a specific version of node nvm use v11.14.0 To install a new node version nvm install v11.14.0","title":"Setup   nvm"},{"location":"Dev%20Notes/Setup%20-%20nvm/#to-find-all-the-installed-version-of-node","text":"nvm ls","title":"To find all the installed version of node"},{"location":"Dev%20Notes/Setup%20-%20nvm/#to-use-a-specific-version-of-node","text":"nvm use v11.14.0","title":"To use a specific version of node"},{"location":"Dev%20Notes/Setup%20-%20nvm/#to-install-a-new-node-version","text":"nvm install v11.14.0","title":"To install a new node version"},{"location":"Dev%20Notes/my-mkdocs-config/","text":"My Mkdocs.yml file site_name: Vedant's Dev Notes theme: name: material features: - navigation.tabs - navigation.instant - toc.integrate - navigation.top #logo: fontawesome/brands/twitter #favicon: images/favicon.png font: text: Inter code: Roboto Mono extra_css: - stylesheets/extra.css extra: social: - icon: fontawesome/regular/user-circle link: https://www.vedantlohbare.com - icon: fontawesome/brands/twitter link: https://twitter.com/vedantlohbare - icon: fontawesome/brands/linkedin link: https://www.linkedin.com/in/vedant-lohbare/ - icon: fontawesome/brands/github link: https://github.com/vedant14/dev-notes - icon: fontawesome/brands/strava link: https://www.strava.com/athletes/25910894 dev_addr: \"127.0.0.1:7000\"","title":"My `Mkdocs.yml` file"},{"location":"Dev%20Notes/my-mkdocs-config/#my-mkdocsyml-file","text":"site_name: Vedant's Dev Notes theme: name: material features: - navigation.tabs - navigation.instant - toc.integrate - navigation.top #logo: fontawesome/brands/twitter #favicon: images/favicon.png font: text: Inter code: Roboto Mono extra_css: - stylesheets/extra.css extra: social: - icon: fontawesome/regular/user-circle link: https://www.vedantlohbare.com - icon: fontawesome/brands/twitter link: https://twitter.com/vedantlohbare - icon: fontawesome/brands/linkedin link: https://www.linkedin.com/in/vedant-lohbare/ - icon: fontawesome/brands/github link: https://github.com/vedant14/dev-notes - icon: fontawesome/brands/strava link: https://www.strava.com/athletes/25910894 dev_addr: \"127.0.0.1:7000\"","title":"My Mkdocs.yml file"},{"location":"Gatsby/","text":"My Gatsby notes I use gatsby to create static sites and landing pages. I just stumbled on this SSG, there are obviously hundreds if not thousand options available. I found it more customisable than jekyll and that is why I have probably used it more extensively than jekyll I use it to create all my landing pages. Although I must say the only thing I hate about gatsby is the time it takes to generate a new build. In comparison, jekyll or mkdocs are almost instantaneous.","title":"My Gatsby notes"},{"location":"Gatsby/#my-gatsby-notes","text":"I use gatsby to create static sites and landing pages. I just stumbled on this SSG, there are obviously hundreds if not thousand options available. I found it more customisable than jekyll and that is why I have probably used it more extensively than jekyll I use it to create all my landing pages. Although I must say the only thing I hate about gatsby is the time it takes to generate a new build. In comparison, jekyll or mkdocs are almost instantaneous.","title":"My Gatsby notes"},{"location":"Gatsby/Common%20styles%20I%20use/","text":"Import Colors Make sure the colors are in the GlobalStyles.js file import { colors } from \"../../styles/GlobalStyles\" Usage color: ${colors.white}; Media Screen Change the width to get the desired output 786 for table 1024 for desktop @media screen and (min-width: 768px) { margin: 20px; } Importing an image import DateIcon from \"../../images/calendar.svg\" <img src={DateIcon} alt=\"date\" /> Creating a grid display: grid; grid-template-columns: 1fr; grid-gap: 5px; @media (min-width: 768px) { grid-template: 3fr / 1fr 2fr; grid-area: sidebar; } grid-template-areas: \"header header header header\" \"main main . sidebar\" \"footer footer footer footer\"; Resources A Complete Guide to Grid | CSS-Tricks Mapping over a node Usage render={data => ( <div class=\"featured-products\"> {data.allContentfulFeaturedProduct.edges.map(({ node }, i) => ( <div class=\"product\" key={i}> <div>{product}</div> </div> ))} </div> )} Using Props Here I am checking if the prop is event background: ${props => props.col % 2 === 0 ? `${colors.off_primary}` : `${colors.nav}`};","title":"Common styles I use"},{"location":"Gatsby/Common%20styles%20I%20use/#import-colors","text":"Make sure the colors are in the GlobalStyles.js file import { colors } from \"../../styles/GlobalStyles\" Usage color: ${colors.white};","title":"Import Colors"},{"location":"Gatsby/Common%20styles%20I%20use/#media-screen","text":"Change the width to get the desired output 786 for table 1024 for desktop @media screen and (min-width: 768px) { margin: 20px; }","title":"Media Screen"},{"location":"Gatsby/Common%20styles%20I%20use/#importing-an-image","text":"import DateIcon from \"../../images/calendar.svg\" <img src={DateIcon} alt=\"date\" />","title":"Importing an image"},{"location":"Gatsby/Common%20styles%20I%20use/#creating-a-grid","text":"display: grid; grid-template-columns: 1fr; grid-gap: 5px; @media (min-width: 768px) { grid-template: 3fr / 1fr 2fr; grid-area: sidebar; } grid-template-areas: \"header header header header\" \"main main . sidebar\" \"footer footer footer footer\";","title":"Creating a grid"},{"location":"Gatsby/Common%20styles%20I%20use/#resources","text":"A Complete Guide to Grid | CSS-Tricks","title":"Resources"},{"location":"Gatsby/Common%20styles%20I%20use/#mapping-over-a-node","text":"Usage render={data => ( <div class=\"featured-products\"> {data.allContentfulFeaturedProduct.edges.map(({ node }, i) => ( <div class=\"product\" key={i}> <div>{product}</div> </div> ))} </div> )}","title":"Mapping over a node"},{"location":"Gatsby/Common%20styles%20I%20use/#using-props","text":"Here I am checking if the prop is event background: ${props => props.col % 2 === 0 ? `${colors.off_primary}` : `${colors.nav}`};","title":"Using Props"},{"location":"Gatsby/Gatsby%20With%20Airtable/","text":"Sourcing Data Install the plugin First things first, run the command to install the plugin npm install gatsby-source-airtable Use the plugin in the in the gatsby-config.js Ensure that columns in and across the tables have unique names. This method is recommended since the apiKey is not exposed. Read more at dotenv { resolve: `gatsby-source-airtable`, options: { apiKey: process.env.AIRTABLE_API_KEY, // may instead specify via env, see below tables: [ { baseId: `apps0ewHWEXiQKPdn`, tableName: `Boxes`, mapping: { Attachments: `fileNode` }, tableLinks: [`BoxItems`], }, ], }, }, Form Usage ```bash import React, { useState } from \"react\" import { Button, Form, Modal } from \"react-bootstrap\" export default function SiteVisit({ setSiteFormShow, siteFormShow, projectName, }) { const handleSiteFormClose = () => setSiteFormShow(false) const [name, setName] = useState(\"\") const [email, setEmail] = useState(\"\") const [selectedCategory, setSelectedCategory] = useState(\"\") const [selectedPurpose, setSelectedPurpose] = useState(\"\") const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\") const [selectedDate, setSelectedDate] = useState(\"\") const submitFormData = () => { const formData = { Name: name, Email: email, Category: selectedCategory, Purpose: selectedPurpose, Project: projectName, TimeSlot: selectedTimeSlot, Date: selectedDate, } const Airtable = require(\"airtable\") const base = new Airtable({ apiKey: \"keyiXm6tqd7JeGV9X\" }).base( \"appLb9JzfCrvXYgFG\" ) //change both the api key and baseid refer <https://airtable.com/api> const table = base(\"Site Visits\") //use you table name inside that base table.create( [ { fields: { Name: name, Email: email, Category: selectedCategory, Purpose: selectedPurpose, Project: projectName, TimeSlot: selectedTimeSlot, Date: selectedDate, }, }, ], function (err, records) { if (err) { console.error(err) } } ) handleSiteFormClose() } return ( <div> <Modal show={siteFormShow} onHide={handleSiteFormClose}> <Modal.Header closeButton> <Modal.Title>Interested in {projectName}</Modal.Title> </Modal.Header> <Modal.Body> <Form noValidate> <Form.Group controlId=\"formBasicText\"> <Form.Label>Please enter your Name</Form.Label> <Form.Control type=\"text\" placeholder=\"Full Name\" value={name} onChange={e => setName(e.target.value)} /> </Form.Group> <Form.Group controlId=\"formBasicEmail\"> <Form.Label>Your email id</Form.Label> <Form.Control type=\"email\" placeholder=\"info@homzhub.com\" value={email} onChange={e => setEmail(e.target.value)} /> <Form.Text className=\"text-muted\"> We'll never share your email with anyone else. </Form.Text> </Form.Group> <Form.Group controlId=\"formBasicDropdown\"> <Form.Label>Choose your configuration</Form.Label> <Form.Control as=\"select\" value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} > <option> </option> <option>1 BHK</option> <option>2 BHK</option> <option>3 BHK</option> <option>4+ BHK</option> </Form.Control> </Form.Group> <Form.Group controlId=\"formBasicDropdown\"> <Form.Label>Purpose</Form.Label> <Form.Control as=\"select\" value={selectedPurpose} onChange={e => setSelectedPurpose(e.target.value)} > <option> </option> <option>End use</option> <option>Investment</option> </Form.Control> </Form.Group> </Form> </Modal.Body> <Modal.Footer> <Button variant=\"secondary\" onClick={handleSiteFormClose}> Close </Button> <Button variant=\"primary\" onClick={submitFormData}> Submit </Button> </Modal.Footer> </Modal> </div> ) } ``` Create a Node in gatsby-node.js bash const path = require(`path`) exports.createPages = ({ graphql, actions }) => { const { createPage } = actions return new Promise(async resolve => { const result = await graphql(` { allAirtable(filter: { data: { BoxName: { ne: null } } }) { edges { node { recordId id slug } } } } `) // For each path, create page and choose a template. // values in context Object are available in that page's query result.data.allAirtable.edges.forEach(({ node }) => { createPage({ path: `/${node.slug}`, component: path.resolve(`./src/template/product.js`), context: { RecordID: node.recordId, }, }) }) resolve() }) } in the template post.js ```jsx import React from \"react\" import { graphql } from \"gatsby\" const ProductPage = ({ data: { airtable: { data }, }, }) => { return ( {data.BoxAdditional} ) } export const query = graphql query ProductPageQuery($RecordID: String!) { airtable(recordId: { eq: $RecordID }) { data { BoxAdditional BoxName } id } } export default ProductPage ```","title":"Gatsby With Airtable"},{"location":"Gatsby/Gatsby%20With%20Airtable/#sourcing-data","text":"","title":"Sourcing Data"},{"location":"Gatsby/Gatsby%20With%20Airtable/#install-the-plugin","text":"First things first, run the command to install the plugin npm install gatsby-source-airtable Use the plugin in the in the gatsby-config.js Ensure that columns in and across the tables have unique names. This method is recommended since the apiKey is not exposed. Read more at dotenv { resolve: `gatsby-source-airtable`, options: { apiKey: process.env.AIRTABLE_API_KEY, // may instead specify via env, see below tables: [ { baseId: `apps0ewHWEXiQKPdn`, tableName: `Boxes`, mapping: { Attachments: `fileNode` }, tableLinks: [`BoxItems`], }, ], }, },","title":"Install the plugin"},{"location":"Gatsby/Gatsby%20With%20Airtable/#form","text":"Usage ```bash import React, { useState } from \"react\" import { Button, Form, Modal } from \"react-bootstrap\" export default function SiteVisit({ setSiteFormShow, siteFormShow, projectName, }) { const handleSiteFormClose = () => setSiteFormShow(false) const [name, setName] = useState(\"\") const [email, setEmail] = useState(\"\") const [selectedCategory, setSelectedCategory] = useState(\"\") const [selectedPurpose, setSelectedPurpose] = useState(\"\") const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\") const [selectedDate, setSelectedDate] = useState(\"\") const submitFormData = () => { const formData = { Name: name, Email: email, Category: selectedCategory, Purpose: selectedPurpose, Project: projectName, TimeSlot: selectedTimeSlot, Date: selectedDate, } const Airtable = require(\"airtable\") const base = new Airtable({ apiKey: \"keyiXm6tqd7JeGV9X\" }).base( \"appLb9JzfCrvXYgFG\" ) //change both the api key and baseid refer <https://airtable.com/api> const table = base(\"Site Visits\") //use you table name inside that base table.create( [ { fields: { Name: name, Email: email, Category: selectedCategory, Purpose: selectedPurpose, Project: projectName, TimeSlot: selectedTimeSlot, Date: selectedDate, }, }, ], function (err, records) { if (err) { console.error(err) } } ) handleSiteFormClose() } return ( <div> <Modal show={siteFormShow} onHide={handleSiteFormClose}> <Modal.Header closeButton> <Modal.Title>Interested in {projectName}</Modal.Title> </Modal.Header> <Modal.Body> <Form noValidate> <Form.Group controlId=\"formBasicText\"> <Form.Label>Please enter your Name</Form.Label> <Form.Control type=\"text\" placeholder=\"Full Name\" value={name} onChange={e => setName(e.target.value)} /> </Form.Group> <Form.Group controlId=\"formBasicEmail\"> <Form.Label>Your email id</Form.Label> <Form.Control type=\"email\" placeholder=\"info@homzhub.com\" value={email} onChange={e => setEmail(e.target.value)} /> <Form.Text className=\"text-muted\"> We'll never share your email with anyone else. </Form.Text> </Form.Group> <Form.Group controlId=\"formBasicDropdown\"> <Form.Label>Choose your configuration</Form.Label> <Form.Control as=\"select\" value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} > <option> </option> <option>1 BHK</option> <option>2 BHK</option> <option>3 BHK</option> <option>4+ BHK</option> </Form.Control> </Form.Group> <Form.Group controlId=\"formBasicDropdown\"> <Form.Label>Purpose</Form.Label> <Form.Control as=\"select\" value={selectedPurpose} onChange={e => setSelectedPurpose(e.target.value)} > <option> </option> <option>End use</option> <option>Investment</option> </Form.Control> </Form.Group> </Form> </Modal.Body> <Modal.Footer> <Button variant=\"secondary\" onClick={handleSiteFormClose}> Close </Button> <Button variant=\"primary\" onClick={submitFormData}> Submit </Button> </Modal.Footer> </Modal> </div> ) } ```","title":"Form"},{"location":"Gatsby/Gatsby%20With%20Airtable/#create-a-node","text":"in gatsby-node.js bash const path = require(`path`) exports.createPages = ({ graphql, actions }) => { const { createPage } = actions return new Promise(async resolve => { const result = await graphql(` { allAirtable(filter: { data: { BoxName: { ne: null } } }) { edges { node { recordId id slug } } } } `) // For each path, create page and choose a template. // values in context Object are available in that page's query result.data.allAirtable.edges.forEach(({ node }) => { createPage({ path: `/${node.slug}`, component: path.resolve(`./src/template/product.js`), context: { RecordID: node.recordId, }, }) }) resolve() }) } in the template post.js ```jsx import React from \"react\" import { graphql } from \"gatsby\" const ProductPage = ({ data: { airtable: { data }, }, }) => { return (","title":"Create a Node"},{"location":"Gatsby/Infinte%20Scroll/","text":"Resources https://www.erichowey.dev/writing/load-more-button-and-infinite-scroll-in-gatsby/ https://scotch.io/tutorials/build-an-infinite-scroll-image-gallery-with-gatsby-and-netlify-functions https://github.com/baobabKoodaa/gatsby-starter-infinite-scroll https://github.com/baobabKoodaa/blog","title":"Infinte Scroll"},{"location":"Gatsby/Infinte%20Scroll/#resources","text":"https://www.erichowey.dev/writing/load-more-button-and-infinite-scroll-in-gatsby/ https://scotch.io/tutorials/build-an-infinite-scroll-image-gallery-with-gatsby-and-netlify-functions https://github.com/baobabKoodaa/gatsby-starter-infinite-scroll https://github.com/baobabKoodaa/blog","title":"Resources"},{"location":"Gatsby/New%20Component%20Configurations/","text":"Normally when I create a new component, I configure it this way In the index.js import React from \"react\" import { Wrapper } from \"./styles\" export function Something() { return( <Wrapper> <h1>Something</h1> </Wrapper> ) } In the styles.js import styled from \"styled-components\" import { colors } from \"../../styles/GlobalStyles\" export const Wrapper = styled.div` margin: 30px; `","title":"New Component Configurations"},{"location":"Gatsby/New%20Project/","text":"Create a new gatsby project This will create a new gatsby project with the default starter gatsby new Create a gatsby project with a starter of your choice gatsby new gatsby-cafe https://github.com/vedant14/gatsby-starter","title":"New Project"},{"location":"Gatsby/New%20Project/#create-a-new-gatsby-project","text":"This will create a new gatsby project with the default starter gatsby new","title":"Create a new gatsby project"},{"location":"Gatsby/New%20Project/#create-a-gatsby-project-with-a-starter-of-your-choice","text":"gatsby new gatsby-cafe https://github.com/vedant14/gatsby-starter","title":"Create a gatsby project with a starter of your choice"},{"location":"Gatsby/Using%20Dotenv/","text":"We will use Dotenv to pass the api keys or other sensitive information Read more here . Install the plugin from npm npm i dotenv Create the .env file in your source directory This command will create a file in the root of your directory touch .env.development Open it and add your keys in AIRTABLE_API_KEY=heythisisvedantskey Add the following code in your config file In the gatsby-config.js require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}`, }) and whereever you want to call the keys you can now use process.env.AIRTABLE_API_KEY Hosting on Netlify When you are hosting on netlify add the environment variables in the same format i.e AIRTABLE_API_KEY=heythisisvedantskey","title":"Using Dotenv"},{"location":"Gatsby/Using%20Dotenv/#install-the-plugin-from-npm","text":"npm i dotenv","title":"Install the plugin from npm"},{"location":"Gatsby/Using%20Dotenv/#create-the-env-file-in-your-source-directory","text":"This command will create a file in the root of your directory touch .env.development Open it and add your keys in AIRTABLE_API_KEY=heythisisvedantskey","title":"Create the .env file in your source directory"},{"location":"Gatsby/Using%20Dotenv/#add-the-following-code-in-your-config-file","text":"In the gatsby-config.js require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}`, }) and whereever you want to call the keys you can now use process.env.AIRTABLE_API_KEY","title":"Add the following code in your config file"},{"location":"Gatsby/Using%20Dotenv/#hosting-on-netlify","text":"When you are hosting on netlify add the environment variables in the same format i.e AIRTABLE_API_KEY=heythisisvedantskey","title":"Hosting on Netlify"},{"location":"Github/","text":"My Github notes I use github as my default git versioning system. In fact, I suspect like most devs, I haven't even used any other version control systems.","title":"My Github notes"},{"location":"Github/#my-github-notes","text":"I use github as my default git versioning system. In fact, I suspect like most devs, I haven't even used any other version control systems.","title":"My Github notes"},{"location":"Github/Common%20commands%20I%20use/","text":"Initialise a git repo This will create a git repo inside the directory you are currently in. git init Create a branch from master From master meaning, the new branch that will be created will at first be identical to master You need to run git push after this so that these changes are reflected in github too. git checkout -b new-model Check the branches created for a particular repo If you want to find what are the various branches in an existing repo, then use this command. git branch Checkout to an existing branch git checkout <branchname>","title":"Common commands I use"},{"location":"Github/Common%20commands%20I%20use/#initialise-a-git-repo","text":"This will create a git repo inside the directory you are currently in. git init","title":"Initialise a git repo"},{"location":"Github/Common%20commands%20I%20use/#create-a-branch-from-master","text":"From master meaning, the new branch that will be created will at first be identical to master You need to run git push after this so that these changes are reflected in github too. git checkout -b new-model","title":"Create a branch from master"},{"location":"Github/Common%20commands%20I%20use/#check-the-branches-created-for-a-particular-repo","text":"If you want to find what are the various branches in an existing repo, then use this command. git branch","title":"Check the branches created for a particular repo"},{"location":"Github/Common%20commands%20I%20use/#checkout-to-an-existing-branch","text":"git checkout <branchname>","title":"Checkout to an existing branch"},{"location":"Jekyll/","text":"My Jekyll notes Jekyll is a static site generator. When I came across jekyll it opened my mind to the possibility of hosting a site for free. And the amazing possibility of staticly generated sites Jekyll is pretty easy to wrap your head around. It took me probably less than a day to understand it.","title":"My Jekyll notes"},{"location":"Jekyll/#my-jekyll-notes","text":"Jekyll is a static site generator. When I came across jekyll it opened my mind to the possibility of hosting a site for free. And the amazing possibility of staticly generated sites Jekyll is pretty easy to wrap your head around. It took me probably less than a day to understand it.","title":"My Jekyll notes"},{"location":"Jekyll/New%20Jekyll%20project/","text":"Start a server bundle exec jekyll serve --livereload","title":"New Jekyll project"},{"location":"Jekyll/New%20Jekyll%20project/#start-a-server","text":"bundle exec jekyll serve --livereload","title":"Start a server"},{"location":"Ruby-On-Rails/","text":"My Ruby on rails Notes Introduction These are my ruby on rails code/notes. My Coding Journey I started with Ruby on rails in early 2019, I suppose. I bought a course on udemy and that was the start. Learning to code was always a deep desire for me but at the same time very daunting. Where do you start, what language to pick up. A friend suggest RoR and I've been with it ever since. It is not a bad place for begineers to start.","title":"My Ruby on rails Notes"},{"location":"Ruby-On-Rails/#my-ruby-on-rails-notes","text":"","title":"My Ruby on rails Notes"},{"location":"Ruby-On-Rails/#introduction","text":"These are my ruby on rails code/notes.","title":"Introduction"},{"location":"Ruby-On-Rails/#my-coding-journey","text":"I started with Ruby on rails in early 2019, I suppose. I bought a course on udemy and that was the start. Learning to code was always a deep desire for me but at the same time very daunting. Where do you start, what language to pick up. A friend suggest RoR and I've been with it ever since. It is not a bad place for begineers to start.","title":"My Coding Journey"},{"location":"Ruby-On-Rails/Basics/New%20Rails%20App/","text":"Create a new rails application The database selected by default is mysql. For deploying the app on heroku it is essential to use postgresql rails new slack_bot -T --database=postgresql App with a different version of rails You will need to install the specific version of rails before hand - gem install rails -v 5.2.3 rails _5.2.3_ new new_app_name --database=postgresql Create and migrate the database These commands will create and migrate a rails data base rails db:create rails db:migrate","title":"New Rails App"},{"location":"Ruby-On-Rails/Basics/New%20Rails%20App/#create-a-new-rails-application","text":"The database selected by default is mysql. For deploying the app on heroku it is essential to use postgresql rails new slack_bot -T --database=postgresql","title":"Create a new rails application"},{"location":"Ruby-On-Rails/Basics/New%20Rails%20App/#app-with-a-different-version-of-rails","text":"You will need to install the specific version of rails before hand - gem install rails -v 5.2.3 rails _5.2.3_ new new_app_name --database=postgresql","title":"App with a different version of rails"},{"location":"Ruby-On-Rails/Basics/New%20Rails%20App/#create-and-migrate-the-database","text":"These commands will create and migrate a rails data base rails db:create rails db:migrate","title":"Create and migrate the database"},{"location":"Ruby-On-Rails/Search/search/","text":"search.md Ave name = \"independent_action_item:independent_action_item\" name_vedant = name.gsub(/:(\\d+)/,'').strip puts name_vedant","title":"Search"},{"location":"Ruby-On-Rails/Slack-Bot/","text":"Making a slack bot with Rails I am trying to create a slack bot with rails. This is my way to earn a side-income by building a micro-saas.","title":"Making a slack bot with Rails"},{"location":"Ruby-On-Rails/Slack-Bot/#making-a-slack-bot-with-rails","text":"I am trying to create a slack bot with rails. This is my way to earn a side-income by building a micro-saas.","title":"Making a slack bot with Rails"},{"location":"Strapi/","text":"My Strapi Notes Strapi is a headless CMS tool It is also open source. I am interested in figuring out the best way to use it with Gatsby to create sites Strapi documentation","title":"My Strapi Notes"},{"location":"Strapi/#my-strapi-notes","text":"Strapi is a headless CMS tool It is also open source. I am interested in figuring out the best way to use it with Gatsby to create sites Strapi documentation","title":"My Strapi Notes"},{"location":"Strapi/Common%20command%20I%20use/","text":"Strapi admin password reset npm run strapi admin:reset-user-password","title":"Common command I use"},{"location":"Strapi/Common%20command%20I%20use/#strapi-admin-password-reset","text":"npm run strapi admin:reset-user-password","title":"Strapi admin password reset"},{"location":"Strapi/New%20Project/","text":"Create a Strapi Project npx create-strapi-app my-project Strapi app quickstart Quickstart uses the default database (SQLite) npx create-strapi-app my-project --quickstart Running Strapi To start the Strapi application, run the following command in the project folder: If you are running this for the first time, it will open signup for admin form npm run develop","title":"New Project"},{"location":"Strapi/New%20Project/#create-a-strapi-project","text":"npx create-strapi-app my-project","title":"Create a Strapi Project"},{"location":"Strapi/New%20Project/#strapi-app-quickstart","text":"Quickstart uses the default database (SQLite) npx create-strapi-app my-project --quickstart","title":"Strapi app quickstart"},{"location":"Strapi/New%20Project/#running-strapi","text":"To start the Strapi application, run the following command in the project folder: If you are running this for the first time, it will open signup for admin form npm run develop","title":"Running Strapi"}]}